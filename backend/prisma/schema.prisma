generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Order {
  order_id     Int            @id @default(autoincrement())
  totalAmount  Int?
  status       String?        @db.VarChar(255)
  phiShip      Int?
  thoiGian     String?        @db.VarChar(255)
  user_id      Int?
  createdAt    DateTime?      @default(now()) @db.Timestamp(0)
  address      String?        @db.VarChar(255)
  User         User?          @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "Order_ibfk_1")
  OrderProduct OrderProduct[]

  @@index([user_id], map: "user_id")
}

model OrderProduct {
  id          Int      @id @default(autoincrement())
  quantity    Int?
  products_id Int?
  order_id    Int?
  Product     Product? @relation(fields: [products_id], references: [products_id], onDelete: Cascade, onUpdate: NoAction, map: "OrderProduct_ibfk_1")
  Order       Order?   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction, map: "OrderProduct_ibfk_2")

  @@unique([products_id, order_id], map: "products_id")
  @@index([order_id], map: "order_id")
}

model Product {
  products_id    Int              @id @default(autoincrement())
  products_name  String?          @db.VarChar(255)
  products_image String?          @db.VarChar(255)
  products_price Int?
  products_type  String?          @db.VarChar(255)
  quantitySold   Int?             @default(0)
  OrderProduct   OrderProduct[]
  ProductComment ProductComment[]
}

model ProductComment {
  comment_id    Int       @id @default(autoincrement())
  user_id       Int
  product_id    Int
  user_fullname String    @db.VarChar(255)
  content       String?   @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  User          User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "ProductComment_ibfk_1")
  Product       Product   @relation(fields: [product_id], references: [products_id], onDelete: Cascade, onUpdate: NoAction, map: "ProductComment_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

model User {
  user_id           Int              @id @default(autoincrement())
  user_fullname     String?          @db.VarChar(255)
  user_email        String?          @db.VarChar(255)
  user_password     String?          @db.VarChar(255)
  user_phone        String?          @db.VarChar(255)
  user_birthDate    DateTime?        @db.DateTime(0)
  user_role         String?          @db.VarChar(255)
  verification_code String?          @db.VarChar(6)
  is_verified       Boolean?         @default(false)
  user_address      String?          @db.VarChar(255)
  Order             Order[]
  ProductComment    ProductComment[]
}

model bank_accounts {
  id             Int       @id @default(autoincrement())
  account_number String    @db.VarChar(20)
  account_name   String    @db.VarChar(100)
  bank_name      String    @db.VarChar(100)
  content        String?   @db.VarChar(255)
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @default(now()) @db.Timestamp(0)
  money          Int?      @default(0)
}
